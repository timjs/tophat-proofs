Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 4)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 3) /. Value 10)) (Value 600) (Symbol (Fresh Int 3) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 1 (Pack (Fresh Int 4)); Insert 0 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 4)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value True)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Confirm"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value True)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value True &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
Option Unnamed "Approve"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10); ((((((Value True &&. (((Value 321 -. Symbol (Fresh Int 3)) <. Value 365) &&. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >=. Value 0) ==>. Value False)) &&. ((Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) >. Value 0) ==>. Value True)) &&. (Value True ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) <=. Value 600)) &&. (Not (Value True) ==>. (Ite (Value 600 <=. (Symbol (Fresh Int 4) /. Value 10)) (Value 600) (Symbol (Fresh Int 4) /. Value 10) ==. Value 0)))
Option Unnamed "Reject"; Option (Named 2) "Deny"; Insert 0 (Pack (Fresh Int 4)); Insert 1 (Pack (Fresh Int 3))]; Value 0; (((((Value True &&. ((Value 0 >=. Value 0) ==>. Value False)) &&. ((Value 0 >. Value 0) ==>. Value False)) &&. (Value False ==>. (Value False &&. ((Value 321 -. Symbol (Fresh Int 3)) <. Value 365)))) &&. (Value 0 <=. Value 600)) &&. (Not (Value False) ==>. (Value 0 ==. Value 0)))
